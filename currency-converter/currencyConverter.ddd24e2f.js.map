{"version":3,"sources":["currencyConverter.js"],"names":["fromSelect","document","querySelector","fromInput","toSelect","endpoint","toAmount","form","ratesByBase","currencies","USD","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","GBP","HKD","HRK","HUF","IDR","ILS","INR","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","ZAR","EUR","generateOptions","options","Object","entries","map","currencyCode","currencyName","join","fetchRates","fetch","base","res","json","rates","convert","amount","from","to","console","log","convertedAmount","rate","formatCurrency","currency","Intl","NumberFormat","style","format","handleInput","e","value","rawAmount","textContent","optionsHTML","innerHTML","addEventListener"],"mappings":"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","file":"currencyConverter.ddd24e2f.js","sourceRoot":"..","sourcesContent":["const fromSelect = document.querySelector('[name=\"from_currency\"]');\nconst fromInput = document.querySelector('[name=\"from_amount\"]');\nconst toSelect = document.querySelector('[name=\"to_currency\"]');\nconst endpoint = \"https://api.exchangeratesapi.io/latest\";\nconst toAmount = document.querySelector('.to_amount');\nconst form = document.querySelector(\".app form\");\nconst ratesByBase = {};\n\nconst currencies = {\n  USD: \"United States Dollar\",\n  AUD: \"Australian Dollar\",\n  BGN: \"Bulgarian Lev\",\n  BRL: \"Brazilian Real\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  CZK: \"Czech Republic Koruna\",\n  DKK: \"Danish Krone\",\n  GBP: \"British Pound Sterling\",\n  HKD: \"Hong Kong Dollar\",\n  HRK: \"Croatian Kuna\",\n  HUF: \"Hungarian Forint\",\n  IDR: \"Indonesian Rupiah\",\n  ILS: \"Israeli New Sheqel\",\n  INR: \"Indian Rupee\",\n  JPY: \"Japanese Yen\",\n  KRW: \"South Korean Won\",\n  MXN: \"Mexican Peso\",\n  MYR: \"Malaysian Ringgit\",\n  NOK: \"Norwegian Krone\",\n  NZD: \"New Zealand Dollar\",\n  PHP: \"Philippine Peso\",\n  PLN: \"Polish Zloty\",\n  RON: \"Romanian Leu\",\n  RUB: \"Russian Ruble\",\n  SEK: \"Swedish Krona\",\n  SGD: \"Singapore Dollar\",\n  THB: \"Thai Baht\",\n  TRY: \"Turkish Lira\",\n  ZAR: \"South African Rand\",\n  EUR: \"Euro\"\n};\n\nfunction generateOptions(options) {\n  return Object.entries(options)\n    .map(\n      ([currencyCode, currencyName]) =>\n        `<option value=\"${currencyCode}\">${currencyCode} - ${currencyName}</options>`\n    )\n    .join(\"\");\n}\n\nasync function fetchRates(base = \"USD\") {\n  const res = await fetch(`${endpoint}?base=${base}`);\n  const rates = await res.json();\n  return rates;\n}\n\nasync function convert(amount, from, to) {\n    console.log({amount, from, to})\n  //first check if we even have the currency rates\n  if (!ratesByBase[from]) {\n    console.log(\n      `on no we don't have ${from} to convert to ${to}. So lets go get it!`\n    );\n    const rates = await fetchRates(from);\n    //store them for next time\n    ratesByBase[from] = rates;\n  }\n  //convert the amount they passed in\n  const rate = ratesByBase[from].rates[to];\n  const convertedAmount = rate * amount;\n  console.log(`${amount} ${from} is ${convertedAmount} in ${to}`);\n  return convertedAmount;\n}\n\nfunction formatCurrency(amount, currency) {\n  return Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency\n  }).format(amount);\n}\n\nasync function handleInput(e) {\n  const rawAmount = await convert(\n    fromInput.value,\n    fromSelect.value,\n    toSelect.value\n  );\n  console.log({rawAmount});\n  toAmount.textContent = formatCurrency(rawAmount, toSelect.value);\n}\n\nconst optionsHTML = generateOptions(currencies);\n//populate options\nfromSelect.innerHTML = optionsHTML;\ntoSelect.innerHTML = optionsHTML;\n\nform.addEventListener(\"input\", handleInput);\n"]}