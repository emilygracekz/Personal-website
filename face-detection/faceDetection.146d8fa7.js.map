{"mappings":"4rCAAA,MAAMA,EAAQC,SAASC,cAAc,WAE/BC,EAASF,SAASC,cAAc,UAChCE,EAAMD,EAAOE,WAAW,MAExBC,EAAaL,SAASC,cAAc,SACpCK,EAAUD,EAAWD,WAAW,MAEhCG,EAAe,IAAIC,OAAOC,aAI1BC,GAHgBV,SAASC,cAAc,iCAG7B,CACdU,KAAM,GACNC,MAAO,OAiCT,SAASC,EAASC,GAChB,MAAMC,MAAEA,EAAFC,OAASA,EAATC,IAAiBA,EAAjBC,KAAsBA,GAASJ,EAAKK,YAC1ChB,EAAIiB,UAAU,EAAG,EAAGlB,EAAOa,MAAOb,EAAOc,QACzCb,EAAIkB,YAAc,UAClBlB,EAAImB,UAAY,EAChBC,QAAQC,IAAI,CAAET,MAAAA,EAAOC,OAAAA,EAAQC,IAAAA,EAAKC,KAAAA,IAClCf,EAAIsB,WAAWP,EAAMD,EAAKF,EAAOC,GAGnC,SAASU,GAASP,YAAaL,IAC7BR,EAAQqB,uBAAwB,EAChCrB,EAAQc,UAAU,EAAG,EAAGf,EAAWU,MAAOV,EAAWW,QAErDV,EAAQsB,UAEN7B,EACAe,EAAKe,EACLf,EAAKgB,EACLhB,EAAKC,MACLD,EAAKE,OAELF,EAAKe,EACLf,EAAKgB,EACLpB,EAAQC,KACRD,EAAQC,MAGV,MAAMI,EAAQD,EAAKC,MAAQL,EAAQE,MAC7BI,EAASF,EAAKE,OAASN,EAAQE,MACrCN,EAAQsB,UACNvB,EACAS,EAAKe,EACLf,EAAKgB,EACLpB,EAAQC,KACRD,EAAQC,KAERG,EAAKe,GAAKd,EAAQD,EAAKC,OAAS,EAChCD,EAAKgB,GAAKd,EAASF,EAAKE,QAAU,EAClCD,EACAC,IA/DJe,iBACE,MAAMC,QAAeC,UAAUC,aAAaC,aAAa,CACvDpC,MAAO,CAAEgB,MAAO,KAAMC,OAAQ,OAEhCjB,EAAMqC,UAAYJ,QACZjC,EAAMsC,OAGZd,QAAQC,IAAIzB,EAAMuC,WAAYvC,EAAMwC,aACpCrC,EAAOa,MAAQhB,EAAMuC,WACrBpC,EAAOc,OAASjB,EAAMwC,YACtBlC,EAAWU,MAAQhB,EAAMuC,WACzBjC,EAAWW,OAASjB,EAAMwC,aAuD5BC,GAAgBC,MApDhBV,eAAeW,IACb,MAAMC,QAAcpC,EAAamC,OAAO3C,GACxCwB,QAAQC,IAAImB,GAEZA,EAAMC,QAAQ/B,GACd8B,EAAMC,QAAQlB,GACdmB,sBAAsBH","sources":["faceDetection.js"],"names":["video","document","querySelector","canvas","ctx","getContext","faceCanvas","faceCtx","faceDetector","window","FaceDetector","options","SIZE","SCALE","drawFace","face","width","height","top","left","boundingBox","clearRect","strokeStyle","lineWidth","console","log","strokeRect","censor","imageSmoothingEnabled","drawImage","x","y","async","stream","navigator","mediaDevices","getUserMedia","srcObject","play","videoWidth","videoHeight","populateVideo","then","detect","faces","forEach","requestAnimationFrame"],"version":3,"file":"faceDetection.146d8fa7.js.map","sourcesContent":["const video = document.querySelector(\".webcam\");\n\nconst canvas = document.querySelector(\".video\");\nconst ctx = canvas.getContext(\"2d\");\n\nconst faceCanvas = document.querySelector(\".face\");\nconst faceCtx = faceCanvas.getContext(\"2d\");\n\nconst faceDetector = new window.FaceDetector();\nconst optionsInputs = document.querySelector('.controls input[type=\"range\"]'\n);\n\nconst options = {\n  SIZE: 10,\n  SCALE: 1.35,\n};\n\nfunction handleOption(event) {\n  const { value, name } = event.currentTarget;\n  options[name] = parseFloat(value);\n}\n\n//write function that populates user video\nasync function populateVideo() {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    video: { width: 1280, height: 720 }\n  });\n  video.srcObject = stream;\n  await video.play();\n\n  //size the canvas to be the same size as the video\n  console.log(video.videoWidth, video.videoHeight);\n  canvas.width = video.videoWidth;\n  canvas.height = video.videoHeight;\n  faceCanvas.width = video.videoWidth;\n  faceCanvas.height = video.videoHeight;\n}\n\nasync function detect() {\n  const faces = await faceDetector.detect(video);\n  console.log(faces);\n  //ask browser when next animation frame is and run detect\n  faces.forEach(drawFace);\n  faces.forEach(censor);\n  requestAnimationFrame(detect);\n}\n\nfunction drawFace(face) {\n  const { width, height, top, left } = face.boundingBox;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = \"#ffc600\";\n  ctx.lineWidth = 2;\n  console.log({ width, height, top, left });\n  ctx.strokeRect(left, top, width, height);\n}\n\nfunction censor({ boundingBox: face }) {\n  faceCtx.imageSmoothingEnabled = false;\n  faceCtx.clearRect(0, 0, faceCanvas.width, faceCanvas.height);\n  //draw the small face\n  faceCtx.drawImage(\n    //5 source args\n    video, //where does the source come from\n    face.x, //where do we start the source pull from\n    face.y,\n    face.width,\n    face.height,\n    //4 draw args\n    face.x, //where should we start drawing the x and y\n    face.y,\n    options.SIZE,\n    options.SIZE\n  );\n  //draw the small face back on but scale up\n  const width = face.width * options.SCALE;\n  const height = face.height * options.SCALE;\n  faceCtx.drawImage(\n    faceCanvas, //source\n    face.x,\n    face.y,\n    options.SIZE,\n    options.SIZE,\n    //drawing args\n    face.x - (width - face.width) / 2,\n    face.y - (height - face.height) / 2,\n    width,\n    height\n  );\n}\n\npopulateVideo().then(detect);\n"]}